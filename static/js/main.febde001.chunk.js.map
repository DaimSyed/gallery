{"version":3,"sources":["components/Input.jsx","components/Image.jsx","components/ImageGallery.jsx","App.js","reportWebVitals.js","index.js"],"names":["BasicTextFields","props","React","useState","value","setValue","formSubmit","e","preventDefault","handler","className","onSubmit","noValidate","autoComplete","type","required","onChange","target","Button","onClick","variant","color","Image","imageRef","createRef","state","span","this","current","addEventListener","height","clientHeight","Math","ceil","setState","style","gridRowEnd","ref","src","alt","Component","ImageGallery","data","map","arr","urls","regular","id","App","getImage","a","axios","get","params","client_id","per_page","query","res","console","log","results","imageData","searchValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+UAMe,SAASA,EAAgBC,GACtC,MAA0BC,IAAMC,SAAS,IAAzC,mBAAOC,EAAP,KAAcC,EAAd,KAOA,SAASC,EAAWC,GAClBA,EAAEC,iBACFP,EAAMQ,QAAQL,GAEdC,EAAS,IAEX,OACE,uBAAMK,UAAU,OAAOC,SAAUL,EAAYM,YAAU,EAACC,aAAa,MAArE,UACE,uBAAOC,KAAK,SAASV,MAAOA,EAAOW,UAAQ,EAACC,SAbhD,SAAmBT,GACjBF,EAASE,EAAEU,OAAOb,UAahB,cAACc,EAAA,EAAD,CAAQC,QAASb,EAAYc,QAAQ,YAAYC,MAAM,YAAvD,8B,ICtBeC,E,kDACnB,WAAYrB,GAAQ,IAAD,8BACjB,cAAMA,IACDsB,SAAWrB,IAAMsB,YACtB,EAAKC,MAAQ,CACXC,KAAM,KAJS,E,qDAOnB,WAAqB,IAAD,OAClBC,KAAKJ,SAASK,QAAQC,iBAAiB,QAAQ,WAC7C,IAAMC,EAAS,EAAKP,SAASK,QAAQG,aAC/BL,EAAOM,KAAKC,KAAKH,EAAS,IAChC,EAAKI,SAAS,CAAER,c,oBAGpB,WACE,OACE,qBAAKhB,UAAU,QAAQyB,MAAO,CAAEC,WAAW,QAAD,OAAUT,KAAKF,MAAMC,OAA/D,SACE,qBAAKW,IAAKV,KAAKJ,SAAUe,IAAKX,KAAK1B,MAAMqC,IAAKC,IAAI,W,GAlBvBrC,IAAMsC,W,MCE1B,SAASC,EAAaxC,GACnC,OACE,qBAAKS,UAAU,eAAf,SACGT,EAAMyC,KAAKC,KAAI,SAACC,GACf,OAAO,cAAC,EAAD,CAAoBN,IAAKM,EAAIC,KAAKC,SAAtBF,EAAIG,S,ICgChBC,E,kDAlCb,aAAe,IAAD,8BACZ,gBAMFC,SAPc,uCAOH,WAAO7C,GAAP,eAAA8C,EAAA,mHAESC,IAAMC,IAAI,yCAA0C,CACpEC,OAAQ,CACNC,UAJK,8CAKLC,SAAU,KACVC,MAAOpD,KANF,OAEHqD,EAFG,OASTC,QAAQC,IAAIF,EAAIf,KAAKkB,SACrB,EAAK1B,SAAS,CAAE2B,UAAWJ,EAAIf,KAAKkB,UAV3B,2CAPG,wDAoBdE,YAAc,SAAC1D,GACb,EAAK6C,SAAS7C,IAnBd,EAAKqB,MAAQ,CACXoC,UAAW,IAHD,E,0CAwBd,WACE,OACE,sBAAKnD,UAAU,MAAf,UACE,cAACV,EAAD,CAAiBS,QAASkB,KAAKmC,cAC9BnC,KAAKF,MAAMoC,WAAa,cAACpB,EAAD,CAAcC,KAAMf,KAAKF,MAAMoC,mB,GA7B9C3D,IAAMsC,WCQTuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.febde001.chunk.js","sourcesContent":["/* eslint-disable no-undef */\r\nimport React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./input.css\";\r\n\r\nexport default function BasicTextFields(props) {\r\n  const [value, setValue] = React.useState(\"\");\r\n  //   ! Input value\r\n  function inputTExt(e) {\r\n    setValue(e.target.value);\r\n  }\r\n\r\n  // ! Submit form\r\n  function formSubmit(e) {\r\n    e.preventDefault();\r\n    props.handler(value);\r\n    //   ! clear input\r\n    setValue(\"\");\r\n  }\r\n  return (\r\n    <form className=\"form\" onSubmit={formSubmit} noValidate autoComplete=\"off\">\r\n      <input type=\"search\" value={value} required onChange={inputTExt} />\r\n      <Button onClick={formSubmit} variant=\"contained\" color=\"secondary\">\r\n        Search Images\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nexport default class Image extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.imageRef = React.createRef();\r\n    this.state = {\r\n      span: \"0\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.imageRef.current.addEventListener(\"load\", () => {\r\n      const height = this.imageRef.current.clientHeight;\r\n      const span = Math.ceil(height / 10);\r\n      this.setState({ span });\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"image\" style={{ gridRowEnd: `span ${this.state.span}` }}>\r\n        <img ref={this.imageRef} src={this.props.src} alt=\"\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Image from \"./Image\";\r\nimport \"./imageWrapper.css\";\r\nexport default function ImageGallery(props) {\r\n  return (\r\n    <div className=\"imageWrapper\">\r\n      {props.data.map((arr) => {\r\n        return <Image key={arr.id} src={arr.urls.regular} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport axios from \"axios\";\nimport BasicTextFields from \"./components/Input\";\nimport ImageGallery from \"./components/ImageGallery\";\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      imageData: [],\n    };\n  }\n  // ! Seacrh for images from Api\n  getImage = async (value) => {\n    const API_KEY = `LQg2XVhn0O5l7W8suA7rh-PIhrNa79eV1lBWd4C5eLw`;\n    const res = await axios.get(\"https://api.unsplash.com/search/photos\", {\n      params: {\n        client_id: API_KEY,\n        per_page: \"30\",\n        query: value,\n      },\n    });\n    console.log(res.data.results);\n    this.setState({ imageData: res.data.results });\n  };\n  // ! GEtting Search VAlue\n  searchValue = (value) => {\n    this.getImage(value);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <BasicTextFields handler={this.searchValue} />\n        {this.state.imageData && <ImageGallery data={this.state.imageData} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}